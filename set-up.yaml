add_or_img: 'i' # 'a' for adder, 'c' for custom, 'i' for image classifier
convs: [] # only for image, tuples of width, stride, channels, new_size
extra_layers: [[1,1]] # for everything but images
global_weights: True
sigma_i: 10
taper_q: 'l' # 't' to exponentially decrease the number of neurons in each layer, 'l' to linearly decrease, 'f' for a set width and depth, 'c' for custom
taper: 0.1
architecture: [500, 400, 300, 200]
width: 500
hidden: 5
temperature: 0.1
l2_coeff: 0
max_fan: 6
l3_coeff: 0
max_gates: [0, 0, 0]
l4_coeff: 0.1
l5_coeff: 0.01
min_gates: [1000, 100, 90, 80, 70, 60, 100]
batches: 1000 # should be a factor of the number of samples
timeout: 120 # in minutes
bits: 4 # only for adders
out_bits: 5 # only for adders (should be at most bits+1)
add_adder_help: True # only for adders
with_nots: True # only for adders
add_comp: True # only for images, should be True
size: 28 # only for images
train_n: 60000 # only for images
test_n: 10000 # only for images
n: 10 # only for images
ins: 3 # only for custom circuits
outs: 2 # only for custom circuits
output: [[0, 0],
         [0, 1],
         [0, 1],
         [1, 0],
         [0, 1],
         [1, 0],
         [1, 0],
         [1, 1]] # should be 2^ins lists, each with outs elements (so look like a truth table)
